{"version":3,"sources":["components/Card/styles.module.css","components/List/styles.module.css","components/Header/styles.module.css","components/Generate/styles.module.css","components/Form/styles.module.css","components/Input/styles.module.css","components/Button/styles.module.css","components/Header/index.js","components/Input/index.js","components/Button/index.js","utils/index.js","components/Form/index.js","components/IconButton/index.js","components/assets/addIcon.js","components/assets/deleteIcon.js","components/Card/index.js","components/List/index.js","components/Generate/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","classes","container","Input","props","inputValue","handleInputChange","placeholderValue","rows","style","inputContent","onChange","e","target","value","placeholder","Button","children","onClick","buttonContent","emptyValueCheck","trim","Form","isList","handleFormClose","handleAddData","useState","listName","setListName","cardName","setCardName","cardDescription","setCardDescription","node","useRef","handleClick","useCallback","current","contains","useEffect","document","addEventListener","removeEventListener","handleListNameChange","handleCardNameChange","handleCardDescriptionChange","handleAddButtonClick","cardList","title","description","date","Date","toString","alert","listItem","ref","marginBottom","width","IconButton","AddIcon","height","fill","stroke","strokeWidth","xmlns","viewBox","strokeLinecap","strokeLinejoin","d","cx","cy","r","x1","y1","x2","y2","defaultProps","DeleteIcon","Card","index","listIndex","handleCardDelete","handleDeleteButton","handleOnDragStart","dataTransfer","setData","id","JSON","stringify","draggable","onDragStart","onDragOver","stopPropagation","cardHeader","cardTitle","cursor","cardContent","cardDate","List","listValue","handleListDelete","handleCardAddButton","handleCardDeleteButton","openForm","setOpenForm","setIsList","handleNewCardAddButton","handleToggleOpenForm","handleFormCardAddButton","cardIndex","handleOnDragOver","preventDefault","handleOnDrop","listIndexOfCardToMove","getData","cardIndexToMove","cardToMove","parse","parseInt","onDrop","header","paddingLeft","margin","map","card","ind","Generate","openListInForm","setOpenListInForm","list","setList","localStorage","getItem","setItem","handleNewListAddButton","handleFormListAddButton","currList","filter","item","currCardList","push","sort","a","b","textAlign","listContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.448d80b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__360zR\",\"cardHeader\":\"styles_cardHeader__3bqun\",\"cardContent\":\"styles_cardContent__5eYQ9\",\"cardDescription\":\"styles_cardDescription__2ZjKQ\",\"cardDate\":\"styles_cardDate__19uMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__VOO9M\",\"header\":\"styles_header__2oKZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1NS7y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listContainer\":\"styles_listContainer__2nGZ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__v1yYW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContent\":\"styles_inputContent__2vg9B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContent\":\"styles_buttonContent__j-UzP\"};","import classes from './styles.module.css';\r\n\r\nconst Header = () => {\r\n    return <div className={classes.container}>\r\n        Trello Board\r\n    </div>;\r\n}\r\n\r\nexport default Header;","import classes from './styles.module.css';\r\n\r\nconst Input = props => {\r\n    const { inputValue, handleInputChange, placeholderValue, rows, style } = props;\r\n    const handleChange = e => handleInputChange(e.target.value);\r\n\r\n    return <textarea className={classes.inputContent} style={style} onChange={handleChange}\r\n        placeholder={placeholderValue} rows={rows} value={inputValue} />;\r\n}\r\n\r\nexport default Input;","import classes from './styles.module.css';\r\n\r\nconst Button = props => {\r\n    const { children, style, onClick } = props;\r\n\r\n    return <button className={classes.buttonContent} style={style} onClick={onClick}>{children}</button>;\r\n}\r\n\r\nexport default Button","const emptyValueCheck = value => !value || (typeof value === 'string' && value.trim() === '');\r\n\r\nexport {\r\n    emptyValueCheck,\r\n}","import classes from './styles.module.css';\r\nimport Input from '../Input';\r\nimport Button from '../Button';\r\nimport { useCallback, useState, useRef, useEffect } from 'react';\r\nimport { emptyValueCheck } from '../../utils';\r\n\r\nconst Form = props => {\r\n\r\n    const { isList, handleFormClose, handleAddData } = props;\r\n    const [listName, setListName] = useState('');\r\n    const [cardName, setCardName] = useState('');\r\n    const [cardDescription, setCardDescription] = useState('');\r\n    const node = useRef();\r\n\r\n    const handleClick = useCallback(e => {\r\n        if (node.current.contains(e.target)) {\r\n            // inside click\r\n            return;\r\n        }\r\n        // outside click \r\n        handleFormClose();\r\n    }, [handleFormClose]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClick);\r\n        // return function to be called when unmounted\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClick);\r\n        };\r\n    }, [handleClick]);\r\n\r\n    const handleListNameChange = useCallback(value => setListName(value), []);\r\n    const handleCardNameChange = useCallback(value => setCardName(value), []);\r\n    const handleCardDescriptionChange = useCallback(value => setCardDescription(value), []);\r\n\r\n    const handleAddButtonClick = useCallback(() => {\r\n        const cardList = (!emptyValueCheck(cardName)) && (!emptyValueCheck(cardDescription)) ?\r\n            { title: cardName, description: cardDescription, date: new Date().toString() } : null;\r\n\r\n        if (!isList && emptyValueCheck(cardList)) {\r\n            alert('Missing Card Name or Description!!');\r\n            return;\r\n        }\r\n\r\n        if(isList && emptyValueCheck(listName)){\r\n            alert('Missing List Name!!');\r\n            return;\r\n        }\r\n        const listItem = isList ? { title: listName, cardList: emptyValueCheck(cardList) ? [] : [cardList] } : cardList;\r\n        handleFormClose();\r\n        handleAddData(listItem);\r\n    }, [handleFormClose, handleAddData, listName, cardName, cardDescription, isList]);\r\n\r\n    return <div ref={node} className={classes.container}>\r\n        {isList && <Input inputValue={listName} placeholderValue={'Enter List Name'} rows={1} handleInputChange={handleListNameChange}\r\n            style={{ marginBottom: '1rem' }} />}\r\n        <Input inputValue={cardName} placeholderValue={'Enter Card Name'} rows={1} handleInputChange={handleCardNameChange}\r\n            style={{ marginBottom: '1rem' }} />\r\n        <Input inputValue={cardDescription} placeholderValue={'Enter Description'} rows={4} handleInputChange={handleCardDescriptionChange}\r\n            style={{ marginBottom: '1rem' }} />\r\n        <Button onClick={handleAddButtonClick} style={{ width: '4rem' }}>\r\n            ADD\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default Form;","const IconButton = props => {\r\n    const { children, style, onClick } = props;\r\n    return <div style={style} onClick={onClick}>\r\n        {children}\r\n    </div>;\r\n}\r\n\r\nexport default IconButton;","const AddIcon = props => {\r\n    const { width, height, fill, stroke, strokeWidth } = props;\r\n\r\n    return <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 24 24'\r\n        fill={fill} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\r\n        <path stroke='none' d='M0 0h24v24H0z' fill={fill} />\r\n        <circle cx='12' cy='12' r='9' />\r\n        <line x1='9' y1='12' x2='15' y2='12' />\r\n        <line x1='12' y1='9' x2='12' y2='15' />\r\n    </svg>;\r\n}\r\n\r\nexport default AddIcon;\r\n\r\nAddIcon.defaultProps = {\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    fill: 'none',\r\n    stroke: '#efefef',\r\n    strokeWidth: '1.5'\r\n}","const DeleteIcon = props => {\r\n    const { width, height, fill, stroke, strokeWidth } = props;\r\n\r\n    return <svg xmlns='http://www.w3.org/2000/svg' width={width} height={height} viewBox='0 0 24 24'\r\n        fill={fill} stroke={stroke} strokeWidth={strokeWidth} strokeLinecap='round' strokeLinejoin='round'>\r\n        <path stroke='none' d='M0 0h24v24H0z' fill='none' />\r\n        <line x1='4' y1='7' x2='20' y2='7' />\r\n        <line x1='10' y1='11' x2='10' y2='17' />\r\n        <line x1='14' y1='11' x2='14' y2='17' />\r\n        <path d='M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12' />\r\n        <path d='M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3' />\r\n    </svg>;\r\n}\r\n\r\nexport default DeleteIcon;\r\n\r\nDeleteIcon.defaultProps = {\r\n    width: '1rem',\r\n    height: '1rem',\r\n    fill: 'none',\r\n    stroke: '#efefef',\r\n    strokeWidth: '1.5'\r\n}","import classes from './styles.module.css';\r\nimport IconButton from '../IconButton';\r\nimport DeleteIcon from '../assets/deleteIcon';\r\nimport { useCallback } from 'react';\r\n\r\nconst Card = props => {\r\n    const { index, listIndex, title, description, date, handleCardDelete } = props;\r\n\r\n    const handleDeleteButton = useCallback(() => handleCardDelete(index), [handleCardDelete, index]);\r\n\r\n    const handleOnDragStart = useCallback(e => {\r\n        e.dataTransfer.setData('listIndexOfCardToMove', listIndex);\r\n        e.dataTransfer.setData('cardIndexToMove', e.target.id);\r\n        e.dataTransfer.setData('cardDataToMove', JSON.stringify({ title: title, description: description, date: date }));\r\n        e.dataTransfer.setData('cardUI', e.target);\r\n    }, [title, description, date, listIndex]);\r\n\r\n    const handleOnDragOver = e => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    return <div id={index} className={classes.container} draggable=\"true\"\r\n        onDragStart={handleOnDragStart} onDragOver={handleOnDragOver}>\r\n        <div className={classes.cardHeader}>\r\n            <div className={classes.cardTitle}>{title}</div>\r\n            <IconButton onClick={handleDeleteButton} style={{\r\n                cursor: 'pointer',\r\n            }}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n        <div className={classes.cardContent}>\r\n            <div className={classes.cardDescription}>\r\n                {description}\r\n            </div>\r\n            <div className={classes.cardDate}>\r\n                {date}\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}\r\n\r\nexport default Card;","import classes from './styles.module.css';\r\nimport Card from '../Card';\r\nimport IconButton from '../IconButton';\r\nimport AddIcon from '../assets/addIcon';\r\nimport DeleteIcon from '../assets/deleteIcon';\r\nimport Form from '../Form';\r\nimport { useCallback, useState } from 'react';\r\nimport { emptyValueCheck } from '../../utils';\r\n\r\nconst List = props => {\r\n    const { index, listValue, handleListDelete, handleCardAddButton, handleCardDeleteButton } = props;\r\n    const [openForm, setOpenForm] = useState(false);\r\n    const [isList, setIsList] = useState(false);\r\n\r\n    const handleNewCardAddButton = useCallback(() => {\r\n        setOpenForm(true);\r\n        setIsList(false);\r\n    }, []);\r\n\r\n    const handleToggleOpenForm = useCallback(() => setOpenForm(!openForm), [openForm]);\r\n    const handleFormCardAddButton = useCallback(value => handleCardAddButton(index, value), [index, handleCardAddButton]);\r\n    const handleDeleteButton = useCallback(() => handleListDelete(index), [handleListDelete, index]);\r\n    const handleCardDelete = useCallback(cardIndex => handleCardDeleteButton(index, cardIndex), [handleCardDeleteButton, index]);\r\n    const handleOnDragOver = useCallback(e => e.preventDefault(), [])\r\n\r\n    const handleOnDrop = useCallback(e => {\r\n        e.preventDefault();\r\n        let listIndexOfCardToMove = e.dataTransfer.getData('listIndexOfCardToMove');\r\n        let cardIndexToMove = e.dataTransfer.getData('cardIndexToMove');\r\n        let cardToMove = JSON.parse(e.dataTransfer.getData('cardDataToMove'));\r\n        if (e.target.id !== '' && parseInt(listIndexOfCardToMove) !== parseInt(e.target.id)) {\r\n            handleCardDeleteButton(parseInt(listIndexOfCardToMove), parseInt(cardIndexToMove));\r\n            handleCardAddButton(parseInt(e.target.id), cardToMove);\r\n        }\r\n    }, [handleCardDeleteButton, handleCardAddButton]);\r\n\r\n    return <div id={index} className={classes.container} onDragOver={handleOnDragOver} onDrop={handleOnDrop}>\r\n        <div className={classes.header} >\r\n            {listValue.title}\r\n            <IconButton onClick={handleDeleteButton} style={{\r\n                cursor: 'pointer',\r\n                paddingLeft: '0.5rem'\r\n            }}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n        </div>\r\n        <IconButton onClick={handleNewCardAddButton} style={{\r\n            cursor: 'pointer',\r\n            margin: '0 auto 1rem',\r\n            width: 'fit-content'\r\n        }}>\r\n            <AddIcon />\r\n        </IconButton>\r\n        {openForm && <Form isList={isList} handleFormClose={handleToggleOpenForm} handleAddData={handleFormCardAddButton} />}\r\n        {!emptyValueCheck(listValue.cardList) && listValue.cardList.map((card, ind) => (\r\n            <Card key={ind} index={ind} listIndex={index} title={card.title} description={card.description} date={card.date}\r\n                handleCardDelete={handleCardDelete} />\r\n        ))}\r\n\r\n    </div>;\r\n}\r\n\r\nexport default List;","import classes from './styles.module.css';\r\nimport Form from '../Form';\r\nimport IconButton from '../IconButton';\r\nimport AddIcon from '../assets/addIcon';\r\nimport List from '../List';\r\nimport { emptyValueCheck } from '../../utils';\r\nimport { Fragment, useCallback, useEffect, useState } from 'react';\r\n\r\nconst Generate = () => {\r\n    const [openForm, setOpenForm] = useState(false);\r\n    const [openListInForm, setOpenListInForm] = useState(false);\r\n    const [list, setList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setList(JSON.parse(localStorage.getItem('list')));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('list', JSON.stringify(list))\r\n    }, [list])\r\n\r\n    const handleNewListAddButton = useCallback(() => {\r\n        setOpenForm(!openForm);\r\n        setOpenListInForm(true);\r\n    }, [openForm]);\r\n\r\n    const handleToggleOpenForm = useCallback(() => setOpenForm(false), []);\r\n    const handleFormListAddButton = useCallback(value => emptyValueCheck(list) ? setList([value]) : setList([...list, value]), [list]);\r\n    const handleListDelete = useCallback((index) => {\r\n        const currList = list.filter((item, ind) => {\r\n            return ind !== index;\r\n        });\r\n        setList(currList);\r\n    }, [list]);\r\n\r\n    const handleCardAddButton = useCallback((index, value) => {\r\n        const currList = list.map((item, ind) => {\r\n            let currCardList = item.cardList;\r\n            if (index === ind) {\r\n                currCardList.push(value);\r\n                currCardList = currCardList.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n            }\r\n            return item;\r\n        });\r\n        setList(currList);\r\n    }, [list]);\r\n\r\n    const handleCardDeleteButton = useCallback((listIndex, cardIndex) => {\r\n        const currList = list.map((item, index) => {\r\n            if (index === listIndex) {\r\n                const currCardList = item.cardList.filter((card, ind) => {\r\n                    return ind !== cardIndex;\r\n                });\r\n                item.cardList = currCardList;\r\n            }\r\n            return item;\r\n        });\r\n        setList(currList);\r\n    }, [list]);\r\n\r\n    return <Fragment>\r\n        <IconButton onClick={handleNewListAddButton} style={{\r\n            textAlign: 'end',\r\n            margin: '1rem',\r\n            cursor: 'pointer',\r\n        }}>\r\n            <AddIcon />\r\n        </IconButton>\r\n        {openForm && <Form isList={openListInForm} handleFormClose={handleToggleOpenForm} handleAddData={handleFormListAddButton} />}\r\n        <div className={classes.listContainer}>\r\n            {!emptyValueCheck(list) && list.map((item, index) => (\r\n                <List key={index} index={index} listValue={item} handleListDelete={handleListDelete}\r\n                    handleCardAddButton={handleCardAddButton} handleCardDeleteButton={handleCardDeleteButton} />\r\n            ))}\r\n        </div>\r\n\r\n    </Fragment>;\r\n}\r\n\r\nexport default Generate;","import './App.css';\nimport Header from './components/Header';\nimport Generate from './components/Generate';\n\nconst App = () => {\n  return <div className=\"App\">\n    <Header />\n    <Generate />\n  </div>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}